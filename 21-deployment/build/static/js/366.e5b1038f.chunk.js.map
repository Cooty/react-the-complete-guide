{"version":3,"file":"static/js/366.e5b1038f.chunk.js","mappings":"4MACA,EAAwB,gC,SCUxB,EATyB,SAACA,GACxB,OACE,oBAAQC,UAAWC,EAAc,WAC/B,uBAAIF,EAAMG,QACV,gCAAaH,EAAMI,WAGzB,E,2BCFMC,EAAWC,EAAAA,MAAW,kBAAM,4BAAyC,IAwD3E,MAtDA,WACE,IAAMC,GAAQC,EAAAA,EAAAA,MACRC,EAAKF,EAAMG,OAAOD,GACxB,GAKIE,EAAAA,EAAAA,GAAQC,EAAAA,IAAgB,GAJ1BC,EAAW,EAAXA,YACAC,EAAM,EAANA,OACMC,EAAK,EAAXC,KACAC,EAAK,EAALA,OAGFC,EAAAA,EAAAA,YAAU,WACRL,EAAYJ,EACd,GAAG,CAACI,EAAaJ,IAEjB,IAAMU,GACJ,gBAAKlB,UAAU,WAAU,UACvB,SAACmB,EAAA,QAAc,MAInB,MAAe,YAAXN,EACKK,EAGM,cAAXL,GAA2BC,EAIhB,cAAXD,GAA0BG,GACrB,uBAAIA,IAGE,cAAXH,GAA0BC,GAE1B,iCACE,SAAC,EAAgB,CAACX,OAAQW,EAAMX,OAAQD,KAAMY,EAAMZ,QACpD,SAAC,KAAK,CAACkB,OAAK,EAACC,KAAMf,EAAMe,KAAK,UAC5B,gBAAKrB,UAAU,WAAU,UACvB,SAAC,KAAI,CAACsB,GAAE,UAAKhB,EAAMiB,IAAG,aAAavB,UAAU,YAAW,kCAM5D,SAAC,KAAK,CAACqB,KAAI,UAAKf,EAAMe,KAAI,aAAY,UACpC,SAAC,EAAAG,SAAQ,CAACC,SAAUP,EAAa,UAC/B,SAACd,EAAQ,gBAdnB,GAPS,4CA2BX,C","sources":["webpack://react-complete-guide/./src/components/quotes/HighlightedQuote.module.css?c98c","components/quotes/HighlightedQuote.js","pages/Quote.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"quote\":\"HighlightedQuote_quote__dE8qA\"};","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import React, { useEffect, Suspense } from \"react\";\nimport { Route, Link, useRouteMatch } from \"react-router-dom\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\n\nconst Comments = React.lazy(() => import(\"../components/comments/Comments\"));\n\nfunction Quote() {\n  const match = useRouteMatch();\n  const id = match.params.id;\n  const {\n    sendRequest,\n    status,\n    data: quote,\n    error,\n  } = useHttp(getSingleQuote, true);\n\n  useEffect(() => {\n    sendRequest(id);\n  }, [sendRequest, id]);\n\n  const loadingState = (\n    <div className=\"centered\">\n      <LoadingSpinner />\n    </div>\n  )\n\n  if (status === \"pending\") {\n    return loadingState;\n  }\n\n  if (status === \"completed\" && !quote) {\n    return <p>No quote found :(</p>;\n  }\n\n  if (status === \"completed\" && error) {\n    return <p>{error}</p>;\n  }\n\n  if (status === \"completed\" && quote) {\n    return (\n      <>\n        <HighlightedQuote author={quote.author} text={quote.text} />\n        <Route exact path={match.path}>\n          <div className=\"centered\">\n            <Link to={`${match.url}/comments`} className=\"btn--flat\">\n              Comment on this\n            </Link>\n          </div>\n        </Route>\n\n        <Route path={`${match.path}/comments`}>\n          <Suspense fallback={loadingState}>\n            <Comments />\n          </Suspense>\n        </Route>\n      </>\n    );\n  }\n}\n\nexport default Quote;\n"],"names":["props","className","classes","text","author","Comments","React","match","useRouteMatch","id","params","useHttp","getSingleQuote","sendRequest","status","quote","data","error","useEffect","loadingState","LoadingSpinner","exact","path","to","url","Suspense","fallback"],"sourceRoot":""}