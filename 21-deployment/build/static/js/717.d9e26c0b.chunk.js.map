{"version":3,"file":"static/js/717.d9e26c0b.chunk.js","mappings":"4MACA,EAAuB,mB,SCKvB,EAJa,SAACA,GACZ,OAAO,gBAAKC,UAAWC,EAAa,SAAEF,EAAMG,UAC9C,E,SCHA,EAAuB,wBAAvB,EAAyD,2BAAzD,EAA8F,2BAA9F,EAAmI,2BCmEnI,EA9DkB,SAACH,GACjB,IAAMI,GAAiBC,EAAAA,EAAAA,UACjBC,GAAeD,EAAAA,EAAAA,UACrB,GAA0DE,EAAAA,EAAAA,WAAS,GAAM,eAAlEC,EAAqB,KAAEC,EAAwB,KAiBtD,OACE,iCACE,SAAC,KAAM,CACLC,KAAMF,EACNG,QAAS,SAACC,GAAQ,MAAK,0CAA0C,KAEnE,SAAC,EAAI,WACH,kBACEX,UAAWC,EACXW,SAxBR,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBZ,EAAea,QAAQC,MACvCC,EAAcb,EAAaW,QAAQC,MAIzClB,EAAMoB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,GAClD,EAgBQI,QAdR,WACEd,GAAyB,EAC3B,EAY8B,UAErBT,EAAMwB,YACL,gBAAKvB,UAAWC,EAAgB,UAC9B,SAACuB,EAAA,QAAc,OAInB,iBAAKxB,UAAWC,EAAgB,WAC9B,kBAAOwB,QAAQ,SAAQ,qBACvB,kBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKzB,QAEtC,iBAAKH,UAAWC,EAAgB,WAC9B,kBAAOwB,QAAQ,OAAM,mBACrB,qBAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKvB,QAEpC,gBAAKL,UAAWC,EAAgB,UAC9B,mBACED,UAAU,MACV8B,QAAS,WACPtB,GAAyB,EAC3B,EAAE,gCAShB,E,kBC3CA,MAjBA,WACE,IAAMuB,GAAUC,EAAAA,EAAAA,MAChB,GAAgCC,EAAAA,EAAAA,GAAQC,EAAAA,IAAhCC,EAAW,EAAXA,YAAaC,EAAM,EAANA,OAUrB,OATAC,EAAAA,EAAAA,YAAU,WACO,cAAXD,GACFL,EAAQO,KAAK,IAEjB,GAAG,CAACF,EAAQL,KAMV,SAAC,EAAS,CAACR,UAAsB,YAAXa,EAAsBjB,WALtB,SAACoB,GACvBJ,EAAYI,EACd,GAKF,C","sources":["webpack://react-complete-guide/./src/components/UI/Card.module.css?26d0","components/UI/Card.js","webpack://react-complete-guide/./src/components/quotes/QuoteForm.module.css?b10c","components/quotes/QuoteForm.js","pages/AddQuote.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__9h8Dh\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"QuoteForm_form__ogBoi\",\"loading\":\"QuoteForm_loading__gyIuQ\",\"control\":\"QuoteForm_control__8SqBM\",\"actions\":\"QuoteForm_actions__I8AC6\"};","import { useRef, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [hasInteractedWithForm, setHasInteractedWithForm] = useState(false);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  function focusHandler() {\n    setHasInteractedWithForm(true);\n  }\n\n  return (\n    <>\n      <Prompt\n        when={hasInteractedWithForm}\n        message={(location) => \"Are you sure you want to leave the form?\"}\n      />\n      <Card>\n        <form\n          className={classes.form}\n          onSubmit={submitFormHandler}\n          onFocus={focusHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button\n              className=\"btn\"\n              onClick={() => {\n                setHasInteractedWithForm(false);\n              }}\n            >\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport QuoteForm from \"../components/quotes/QuoteForm\";\nimport useHttp from \"../hooks/use-http\";\nimport { addQuote } from \"../lib/api\";\n\nfunction AddQuote() {\n  const history = useHistory();\n  const { sendRequest, status } = useHttp(addQuote);\n  useEffect(() => {\n    if (status === \"completed\") {\n      history.push(\"/\");\n    }\n  }, [status, history]);\n  const addQuoteHandler = (data) => {\n    sendRequest(data);\n  };\n\n  return (\n    <QuoteForm isLoading={status === \"pending\"} onAddQuote={addQuoteHandler} />\n  );\n}\n\nexport default AddQuote;\n"],"names":["props","className","classes","children","authorInputRef","useRef","textInputRef","useState","hasInteractedWithForm","setHasInteractedWithForm","when","message","location","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","onFocus","isLoading","LoadingSpinner","htmlFor","type","id","ref","rows","onClick","history","useHistory","useHttp","addQuote","sendRequest","status","useEffect","push","data"],"sourceRoot":""}